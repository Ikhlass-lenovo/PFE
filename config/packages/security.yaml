security:
    encoders:
        App\Entity\User:
          algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        
        user_provider:
            entity:
              class: App\Entity\User
              property: username
              

    firewalls:
       
        oauth_token:
               pattern: ^ /oauth/v2/token
               provider: user_provider
          

               security: false
        oauth_authorize:
             pattern: ^/oauth/v2/auth
             form_login:
                 provider: user_provider
                 check_path: /oauth/v2/auth_login_check
                 login_path: /oauth/v2/auth_login
                 use_referer: true
        api:
             provider: user_provider

             pattern: ^/api
             fos_oauth:  true
             stateless:  true
             anonymous:  false
        main:
            pattern: ^/
            #user_checker: security.user_checker
            form_login:
                provider: user_provider
            anonymous:    true
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/api, roles: [IS_AUTHENTICATED_FULLY]}
        - { path: ^/createClient, roles: [IS_AUTHENTICATED_ANONYMOUSLY]}
